version: 2.1 # use CircleCI 2.1

# YAML trick
defaults: &defaults
  working_directory: ~/code   # "code" is our working directory
  resource_class: medium
  docker:
    - image: cimg/node:16.13

# https://circleci.com/blog/config-best-practices-dependency-caching/

orbs:
  nx: nrwl/nx@1.1.3  
jobs:
  build:
    <<: *defaults
    steps:
        - checkout
        # look for existing cache and restore if found
        - restore_cache:
            keys:
                - v1-deps-{{ checksum "package-lock.json" }}
                - v1-deps-
        # install dependencies    
        - run:
            name: install dependencies
            command: npm install
        # save any changes to the cache
        - save_cache:
            key: v1-deps-{{ checksum "package-lock.json" }}
            paths: 
              - node_modules
        # initialize nx
        - nx/set-shas
        # build content
        - run: npx nx affected --base=$NX_BASE --target=build --parallel --max-parallel=2 --exclude=dbx-form  # TODO: unexclude dbx-form later.
        # persist builds to workspace
        - persist_to_workspace:
            root: ~/code
            paths:
              - node_modules
              - dist
  test-with-node:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/code
      - run: ls ~/code
      - run:
          name: run util tests
          command: npx nx test util --ci
          environment:
            JEST_SUITE_NAME: util
            JEST_JUNIT_OUTPUT_FILE: util.junit.xml
      - run:
          name: run rxjs tests
          command: npx nx test rxjs --ci
          environment:
            JEST_SUITE_NAME: rxjs
            JEST_JUNIT_OUTPUT_FILE: rxjs.junit.xml
      - run:
          name: run date tests
          command: npx nx test date --ci
          environment:
            JEST_SUITE_NAME: date
            JEST_JUNIT_OUTPUT_FILE: date.junit.xml
      - run:
          name: run dbx-core tests
          command: npx nx test dbx-core --ci
          environment:
            JEST_SUITE_NAME: dbx-core
            JEST_JUNIT_OUTPUT_FILE: dbx-core.junit.xml
      - run:
          name: run dbx-web tests
          command: npx nx test dbx-web --ci
          environment:
            JEST_SUITE_NAME: dbx-web
            JEST_JUNIT_OUTPUT_FILE: dbx-web.junit.xml
      - store_test_results:
          path: ./reports/junit/
  test-with-node-firebase:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/code
      - run: apt-get update -y && apt-get install -y curl openjdk-11-jre-headless
      - run:
          name: run firebase tests
          command: npx nx test firebase
          environment:
            JEST_SUITE_NAME: firebase
            JEST_JUNIT_OUTPUT_FILE: firebase.junit.xml
      - store_test_results:
          path: ./reports/junit/
  publish-to-npm:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/code
      - run: echo pushing to npm
workflows:
  version: 2
  build-and-test:
    jobs:
      - build
      - test-with-node:
          requires: 
            - build
      - test-with-node-firebase:
          requires:
            - build
