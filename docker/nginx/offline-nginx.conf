user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log debug;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    default_type  application/octet-stream;
    include /etc/nginx/mime.types;
    root    /usr/share/nginx/html;
    index   index.html index.htm;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    #sendfile        on;
    sendfile  off;  # Disable Caching
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    server {
        listen 80 http2 default_server;
        listen [::]:80 http2 default_server;

        # JSON files in html
        location ~ \.(json) {
            root /usr/share/nginx/html;
        }

        # All Other Requests
        location / {
            # Return a Bad Request, since we only want to redirect api calls.
            return 401 '{"code":"401", "message": "API ONLY!"}';
            default_type application/json;
            add_header Content-Type application/json;
        }
    }

    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        
        include /etc/nginx/snippets/ssl-params.conf;
        
        ssl_certificate /etc/nginx/certs/firebase.crt;
        ssl_certificate_key /etc/nginx/certs/firebase.key;

        # JSON files in html
        location ~ \.(json) {
            root /usr/share/nginx/html;
        }

        # All Other Requests
        location / {
            # Return a Bad Request, since we only want to redirect api calls.
            return 401 '{"code":"401", "message": "API ONLY!"}';
            default_type application/json;
            add_header Content-Type application/json;
        }
    }
}
