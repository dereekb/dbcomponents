# Derived from https://github.com/dereekb/dbx-components/blob/main/.circleci/config.yml
# SETUP REQUIRED - Visit all sections marked SETUP REQUIRED to finish up configuration. This requires changes on CircleCI's portal.
version: 2.1
defaults: &defaults
  working_directory: ~/code # "code" is our working directory
  resource_class: large
  docker:
    - image: cimg/node:16.14
orbs:
  nx: nrwl/nx@1.1.3
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: install dependencies
          command: npm ci
      # initialize nx
      - nx/set-shas
      # build
      - run: npx nx affected --base=$NX_BASE --target=build --parallel --max-parallel=2
      # persist builds to workspace
      - persist_to_workspace:
          root: ~/code
          paths:
            - node_modules
            - dist
  # Runs tests for the projects that do not require the firebase emulators.
  test-with-node:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/code
      - run:
          name: run ANGULAR_APP_NAME tests
          command: npx nx test ANGULAR_APP_NAME
      - store_test_results:
          path: ~/code/.reports/jest/
  # Runs tests for the projects that require the firebase emulators.
  test-with-node-firebase:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/code
      # install the emulator requirements
      - run: sudo apt-get update -y && sudo apt-get install -y curl openjdk-11-jre-headless
      # restore the emulators cache
      - restore_cache:
          key: firebase-cache-
      - run:
          name: run API_APP_NAME tests
          command: npx firebase emulators:exec --only auth,firestore,storage 'npx nx run-tests API_APP_NAME'
      - run:
          name: run E2E_APP_NAME tests
          command: npx firebase emulators:exec --only auth,firestore,storage,functions 'npx nx run-tests E2E_APP_NAME'
      # store the emulators cache
      - save_cache:
          key: firebase-cache-
          paths:
            - ~/.cache/firebase
      - store_test_results:
          path: ~/code/.reports/jest/
  # Performs release operations on the release branch.
  run-release-and-push-to-main:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/code
      # SETUP REQUIRED - Add an SSH key from GitHub to your project's CircleCI configuration. This is require to push changes to github
      # https://circleci.com/docs/2.0/add-ssh-key/#adding-ssh-keys-to-a-job
      - add_ssh_keys:
          fingerprints:
            - "SET_THIS_VALUE_TO_BE_VALID"
      - run:
          name: setup git
          command: git config user.email "CI_GIT_USER_EMAIL" && git config user.name "CI_GIT_USER_NAME"
      - run:
          name: build release
          command: npx nx run --parallel=1 workspace:version
      - run:
          # CircleCI does not have a great way to pass variables between run steps, so we grab the tag name before swapping to main, and then move tag to the main branch after making the merge commit into main.
          name: copy tag id, merge release into main and use the release commit message, move tag from release to main
          command: DEV_TAG_ID=$(git describe --abbrev=0 HEAD^) && TAG_ID=$(git describe --abbrev=0) && echo "merging new release ($TAG_ID) into main. Adding all commits since last dev tag ($DEV_TAG_ID)" && git checkout main && git merge release --squash -Xtheirs && git commit -m "$(git log $PREV_TAG_ID..release --pretty=%B | cat)" && git tag -f $TAG_ID
      - run:
          name: push main to origin, push new tag to origin
          command: git push origin main && git push origin $(git describe --abbrev=0 --tags)
      - run:
          name: delete release branch
          command: git push origin --delete release
  deploy-to-firebase:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/code
      - run:
          name: deploy updated projects
          command: npx nx run-many --target=ci-deploy --all --parallel=false # deploy all projects
      - run:
          name: deploy updated rules
          command: npx nx run workspace:ci-deploy-firebase-rules
  # Publishes content to npm. This should occur after running a release.
  publish-to-npm:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/code
      # SETUP REQUIRED - Add your NPM token under the variable NPM_TOKEN on CircleCI for CircleCI to use.
      - run:
          name: configure npmrc / npm login
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: npx nx affected --target=publish-npmjs --all
# --- WORKFLOWS ---
workflows:
  version: 2
  # builds and tests the content. Occurs on every branch.
  build-and-test-and-version:
    jobs:
      - build
      - test-with-node:
          requires:
            - build
      - test-with-node-firebase:
          requires:
            - build
      - run-release-and-push-to-main:
          requires:
            - build
            - test-with-node
            - test-with-node-firebase
          filters:
            branches:
              only: release
  # Publishes to npm
  publish:
    jobs:
      - build:
          filters:
            branches:
              only: main
      - deploy-to-firebase:
          requires:
            - build
          filters:
            branches:
              only: main
      - publish-to-npm:
          requires:
            - build
          filters:
            branches:
              only: main
