{
  "sourceRoot": "API_APP_FOLDER/src",
  "projectType": "application",
  "targets": {
    "build": {
      "executor": "@nrwl/workspace:run-commands",
      "options": {
        "command": "npx nx run API_APP_NAME:build-base",
        "color": true
      }
    },
    "build-base": {
      "executor": "@nrwl/node:webpack",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "API_APP_DIST_FOLDER",
        "main": "API_APP_FOLDER/src/main.ts",
        "tsConfig": "API_APP_FOLDER/tsconfig.app.json",
        "assets": ["API_APP_FOLDER/src/assets"],
        "generatePackageJson": true
      },
      "configurations": {
        "production": {
          "optimization": true,
          "extractLicenses": false,
          "sourceMap": false,
          "inspect": false,
          "fileReplacements": [{
            "replace": "API_APP_FOLDER/src/environments/environment.ts",
            "with": "API_APP_FOLDER/src/environments/environment.prod.ts"
          }]
        }
      }
    },
    "run-emulators": {
      "executor": "@nrwl/workspace:run-commands",
      "options": {
        "command": "npx env-cmd -f .env.secret --use-shell 'npx firebase --project=default emulators:start --import=/root/data/emulators --export-on-exit'"
      }
    },
    "watch-emulators": {
      "executor": "@nrwl/workspace:run-commands",
      "options": {
        "command": "find API_APP_DIST_FOLDER | entr -rp -s './wait-for-ports.sh && npx env-cmd -f .env.secret --use-shell npx firebase --project=default emulators:start --import=/root/data/emulators --export-on-exit'"
      }
    },
    "serve": {
      "executor": "@nrwl/workspace:run-commands",
      "options": {
        "commands": [{
            "command": "npx nx build-base API_APP_NAME --watch"
          },
          {
            "command": "npx nx run API_APP_NAME:watch-emulators"
          }
        ],
        "parallel": true
      }
    },
    "lint": {
      "executor": "@nrwl/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["API_APP_FOLDER/**/*.ts"]
      }
    },
    "test": {
      "executor": "@nrwl/workspace:run-commands",
      "options": {
        "command": "./exec-with-emulator.sh 'npx nx run-tests API_APP_NAME'",
        "color": true
      }
    },
    "run-tests": {
      "executor": "@nrwl/jest:jest",
      "outputs": [
        "coverage/API_APP_FOLDER",
        "./.reports/jest/API_APP_NAME.junit.xml"
      ],
      "options": {
        "jestConfig": "API_APP_FOLDER/jest.config.ts",
        "passWithNoTests": true
      }
    },
    "watch": {
      "executor": "@nrwl/workspace:run-commands",
      "options": {
        "command": "./exec-with-emulator.sh 'npx nx run-tests API_APP_NAME --watch'"
      }
    },
    "make-env": {
      "executor": "@nrwl/workspace:run-commands",
      "options": {
        "command": "node ./make-env.js > API_APP_DIST_FOLDER/.env && cp .env.prod API_APP_DIST_FOLDER/.env.prod"
      }
    },
    "ci-deploy": {
      "executor": "@nrwl/workspace:run-commands",
      "dependsOn": [{
        "target": "build",
        "projects": "self"
      }],
      "options": {
        "commands": [{
            "command": "npx nx run API_APP_NAME:build-base:production"
          }, {
            "command": "npx nx make-env API_APP_NAME"
          },
          {
            "command": "npx firebase --project=prod deploy --only functions --token \"$FIREBASE_TOKEN\""
          }
        ],
        "parallel": false
      }
    }
  },
  "tags": []
}
