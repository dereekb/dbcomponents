@use 'sass:map';
@use 'sass:color';
@use '../../../../style/theming';

// MARK: Variables


// MARK: Mixin
@mixin core() {

  .example-custom-placeholder {
    background: #ccc;
    border: dotted 3px #999;
    min-height: 100px;
    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
  }

  .dbx-form-repeat-array {
    .dbx-form-repeat-array-field {

      @include theming.elevation(1);

      h4 {
        margin: 0;
        display: inline;

        .repeat-array-number {
          margin-right: 4px;
        }
      }

      padding: 0;
      margin-bottom: 2px;
      // border: 1px solid rgba(0, 0, 0, 0.04);

      .dbx-form-repeat-array-field-content {
        display: block;
        padding: 6px;
      }
    }
  }

}

@mixin color($theme-config) {
  $color-config: theming.get-color-config($theme-config);
  $background: map.get($color-config, 'background');

  $form-repeat-array-field-bg: theming.get-color-from-palette($background, 'card');

  .dbx-form-repeat-array-field {
    background: $form-repeat-array-field-bg;
    border: 4px solid $form-repeat-array-field-bg;
  }

}

@mixin typography($typography-config) {}

@mixin theme($theme-config) {
  @include theming.private-check-duplicate-theme-styles($theme-config, 'dbx-form-field-value-array') {
    $color: theming.get-color-config($theme-config);
    $typography: theming.get-typography-config($theme-config);

    @if $color !=null {
      @include color($theme-config);
    }

    @if $typography !=null {
      @include typography($typography);
    }
  }
}
