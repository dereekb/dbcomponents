@use 'sass:map';
@use 'sass:color';
@use '../../../style/theming';
@use '../anchorlist/anchorlist';

// MARK: Variables
$width: 240px;
$mobile-width: 80vw;
$icon-only-width: 65px;
$mat-mdc-list-item-height: 48px;
$active-border-left-width: 2px;
$dbx-sidenav-nav-bottom-padding: 24px;
$faded-text-transparent-color: 0.2;
$active-background-transparent-color: 0.93;

// MARK: Mixin
@mixin core() {
  .dbx-sidenav {
    height: 100%;

    mat-sidenav {
      width: $width;

      .mat-drawer-inner-container {
        box-sizing: border-box;
        padding-bottom: 24px;
      }
    }

    &.dbx-sidenav-mobile {
      mat-sidenav {
        width: $mobile-width;
      }
    }

    &.dbx-sidenav-icon {
      mat-sidenav {
        width: $icon-only-width;
      }

      mat-sidenav-content {
        margin-left: $icon-only-width;
      }
    }

    &.dbx-sidenav-full {
      mat-sidenav {
        width: $width;
      }

      mat-sidenav-content {
        margin-left: $width;
      }
    }

    .mat-sidenav .mat-drawer-inner-container {
      overflow-y: auto !important;
    }

    .dbx-sidenav-nav {
      .dbx-sidenav-nav-end {
        padding-bottom: $dbx-sidenav-nav-bottom-padding;
      }
    }

    .mat-mdc-nav-list.dbx-anchor-list {
      padding-top: 0;
    }
  }

  .dbx-sidenav-page {
    height: 100%;
    max-height: 100%;
    overflow: hidden;

    .dbx-sidenav-page-content {
      overflow: auto;
    }
  }
}

@mixin color($theme-config) {
  $color-config: theming.get-color-config($theme-config);
  $primary: map.get($color-config, 'primary');
  $accent: map.get($color-config, 'accent');

  $background: map.get($color-config, 'background');
  $text-color: theming.get-color-from-palette($primary, '800-contrast');
  $text-faded-color: transparentize(
    $color: $text-color,
    $amount: $faded-text-transparent-color
  );
  $sidenav-background-color: theming.get-color-from-palette($primary, 800);
  $inactive-text-color: theming.get-color-from-palette($primary, '800-contrast');
  $active-icon-color: theming.get-color-from-palette($accent, 400);

  .dbx-sidenav {
    mat-sidenav {
      color: $text-color;
      background-color: $sidenav-background-color;

      .dbx-anchor-list.mat-mdc-nav-list {
        --mdc-list-list-item-label-text-color: #{$text-color};
        --mdc-list-list-item-supporting-text-color: #{$text-color};
        --mdc-list-list-item-leading-icon-color: #{$text-color};

        --mdc-list-list-item-hover-label-text-color: #{$text-faded-color};
        --mdc-list-list-item-hover-supporting-text-color: #{$text-faded-color};
        --mdc-list-list-item-hover-leading-icon-color: #{$text-faded-color};

        .mat-mdc-list-item {
          height: $mat-mdc-list-item-height;
        }

        .dbx-anchor-active {
          .mat-mdc-list-item {
            .mat-mdc-list-item-icon {
              color: $active-icon-color;
            }
          }
        }

        .dbx-anchor-list-root .dbx-anchor-active .mat-mdc-list-item {
          // root list items glow when active
          background: transparentize($color: $active-icon-color, $amount: $active-background-transparent-color);
        }

        // directly active links have a side-
        .dbx-anchor-active-eq,
        .dbx-anchor-list-child .dbx-anchor-active {
          .mat-mdc-list-item {
            border-left: $active-border-left-width solid $active-icon-color;

            .mat-mdc-list-item-icon {
              --mdc-list-list-item-leading-icon-color: #{$active-icon-color};

              // Offset the added border by clearing the default padding width (4px)
              padding-left: anchorlist.$active-root-item-left-padding - $active-border-left-width;
            }
          }
        }

        .dbx-anchor-list-child .dbx-anchor-active .mat-mdc-list-item,
        .dbx-anchor-list-child .dbx-anchor-active-eq .mat-mdc-list-item {
          padding-left: anchorlist.$active-child-item-left-padding - $active-border-left-width;
          background: transparentize($color: $active-icon-color, $amount: $active-background-transparent-color);
        }
      }
    }
  }

  /*
    .active {
      &.mat-mdc-list-item {
        background-color: rgba(0, 0, 0, 0.1);
      }

      mat-icon {
        color: $sidenav-active-color;
      }
    }

    $app-side-nav-bar-padding: 14px;

    .app-side-nav-bar-title {
      // text-align: center;
      padding: $app-side-nav-bar-padding;

      .app-side-nav-bar-title-header {
        display: flex;

        >img {
          width: 32px;
          height: 32px;
          padding-left: 2px;
          padding-right: 16px;
        }

        span {
          @include mat-typography-level-to-styles($color-config, title);
          font-weight: 300;
        }
      }

    }

    .app-side-nav-bar-title-content {
      padding-top: $app-side-nav-bar-padding;
    }
    */
}

@mixin typography($theme-config-or-typography-config) {
}

@mixin theme($theme-config) {
  @include theming.private-check-duplicate-theme-styles($theme-config, 'dbx-router-sidenav') {
    $color: theming.get-color-config($theme-config);
    $density: theming.get-density-config($theme-config);
    $typography: theming.get-typography-config($theme-config);

    @if $color !=null {
      @include color($theme-config);
    }

    @if $typography !=null {
      @include typography($theme-config);
    }
  }
}
