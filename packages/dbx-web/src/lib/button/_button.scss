@use '../style/theming';

// MARK: Variables
$button-spacer-width: 6px;

// MARK: Mixin
@mixin core() {
  .dbx-wide-button {
    .dbx-button {
      min-width: 120px;
      max-width: 100%;
    }
  }

  .dbx-grow-button {
    width: 100%;

    .dbx-button {
      width: 100%;
    }
  }

  .dbx-button-spacer {
    padding-right: $button-spacer-width;
  }

  .mat-icon-button.dbx-button-spacer {
    margin-right: $button-spacer-width;
  }

  .dbx-spinner-custom.mat-progress-spinner.mat-accent circle,
  .dbx-spinner-custom.mat-spinner.mat-accent circle {
    // mat-spinners marked with dbx-spinner-custom should allow the stroke to be inherited.
    stroke: unset !important;
  }

  .mat-button {
    mat-icon.mat-button-icon,
    mat-icon.mat-fab-icon {
      &.mat-icon.mat-ligature-font[fontIcon]::before {
        content: unset;
      }
    }
  }
}

@mixin color($theme-config) {
}

@mixin typography($typography-config) {
}

@mixin theme($theme-config) {
  @include theming.private-check-duplicate-theme-styles($theme-config, 'dbx-button') {
    $color: theming.get-color-config($theme-config);
    $typography: theming.get-typography-config($theme-config);

    @if $color !=null {
      @include color($theme-config);
    }

    @if $typography !=null {
      @include typography($typography);
    }
  }
}
